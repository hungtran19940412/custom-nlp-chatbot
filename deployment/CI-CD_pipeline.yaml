name: Custom NLP Chatbot CI/CD Pipeline

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - src/**
      - tests/**
      - deployment/**
      - config/**

jobs:
- job: Build
  displayName: Build and Test
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'
      addToPath: true
      
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
    
  - script: |
      python -m pytest tests/ --cov=src --cov-report=xml
    displayName: 'Run tests'
    
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/coverage.xml'
      
- job: Build_Docker
  displayName: Build Docker Image
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: Docker@2
    inputs:
      containerRegistry: '$(DOCKER_REGISTRY)'
      repository: 'custom-nlp-chatbot'
      command: 'buildAndPush'
      Dockerfile: 'deployment/Dockerfile'
      tags: |
        $(Build.BuildId)
        latest
        
- job: Deploy_Staging
  displayName: Deploy to Staging
  dependsOn: Build_Docker
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: KubernetesManifest@0
    inputs:
      action: 'deploy'
      kubernetesServiceConnection: '$(KUBERNETES_SERVICE_CONNECTION)'
      namespace: 'staging'
      manifests: 'deployment/k8s_deployment.yaml'
      imagePullSecrets: '$(DOCKER_REGISTRY_SECRET)'
      
- job: Deploy_Production
  displayName: Deploy to Production
  dependsOn: Deploy_Staging
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: KubernetesManifest@0
    inputs:
      action: 'deploy'
      kubernetesServiceConnection: '$(KUBERNETES_SERVICE_CONNECTION)'
      namespace: 'production'
      manifests: 'deployment/k8s_deployment.yaml'
      imagePullSecrets: '$(DOCKER_REGISTRY_SECRET)'
